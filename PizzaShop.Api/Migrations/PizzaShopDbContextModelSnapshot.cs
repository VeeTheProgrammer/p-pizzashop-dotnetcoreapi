// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PizzaShop.Core.DbContexts;

#nullable disable

namespace PizzaShop.Api.Migrations
{
    [DbContext(typeof(PizzaShopDbContext))]
    partial class PizzaShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PizzaShop.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("address_line1");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("address_line2");

                    b.Property<int>("AddressStateId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("city");

                    b.Property<int>("StateID")
                        .HasColumnType("integer")
                        .HasColumnName("state_id");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("integer")
                        .HasColumnName("street_number");

                    b.Property<int>("Zip")
                        .HasColumnType("integer")
                        .HasColumnName("zip");

                    b.HasKey("Id");

                    b.HasIndex("AddressStateId");

                    b.ToTable("address");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.AddressState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StateInitial")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("state_initial");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("state_name");

                    b.HasKey("Id");

                    b.ToTable("address_state");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StateInitial = "AL",
                            StateName = "Alabama"
                        },
                        new
                        {
                            Id = 2,
                            StateInitial = "AK",
                            StateName = "Alaska"
                        },
                        new
                        {
                            Id = 3,
                            StateInitial = "AZ",
                            StateName = "Arizona"
                        },
                        new
                        {
                            Id = 4,
                            StateInitial = "AR",
                            StateName = "Arkansas"
                        },
                        new
                        {
                            Id = 5,
                            StateInitial = "CA",
                            StateName = "California"
                        },
                        new
                        {
                            Id = 6,
                            StateInitial = "CO",
                            StateName = "Colorado"
                        },
                        new
                        {
                            Id = 7,
                            StateInitial = "CT",
                            StateName = "Connecticut"
                        },
                        new
                        {
                            Id = 8,
                            StateInitial = "DE",
                            StateName = "Delaware"
                        },
                        new
                        {
                            Id = 9,
                            StateInitial = "FL",
                            StateName = "Florida"
                        },
                        new
                        {
                            Id = 10,
                            StateInitial = "GA",
                            StateName = "Georgia"
                        },
                        new
                        {
                            Id = 11,
                            StateInitial = "HI",
                            StateName = "Hawaii"
                        },
                        new
                        {
                            Id = 12,
                            StateInitial = "ID",
                            StateName = "Idaho"
                        },
                        new
                        {
                            Id = 13,
                            StateInitial = "IL",
                            StateName = "Illinois"
                        },
                        new
                        {
                            Id = 14,
                            StateInitial = "IN",
                            StateName = "Indiana"
                        },
                        new
                        {
                            Id = 15,
                            StateInitial = "IA",
                            StateName = "Iowa"
                        },
                        new
                        {
                            Id = 16,
                            StateInitial = "KS",
                            StateName = "Kansas"
                        },
                        new
                        {
                            Id = 17,
                            StateInitial = "KY",
                            StateName = "Kentucky"
                        },
                        new
                        {
                            Id = 18,
                            StateInitial = "LA",
                            StateName = "Louisiana"
                        },
                        new
                        {
                            Id = 19,
                            StateInitial = "ME",
                            StateName = "Maine"
                        },
                        new
                        {
                            Id = 20,
                            StateInitial = "MT",
                            StateName = "Montana"
                        },
                        new
                        {
                            Id = 21,
                            StateInitial = "NE",
                            StateName = "Nebraska"
                        },
                        new
                        {
                            Id = 22,
                            StateInitial = "NV",
                            StateName = "Nevada"
                        },
                        new
                        {
                            Id = 23,
                            StateInitial = "NH",
                            StateName = "New Hampshire"
                        },
                        new
                        {
                            Id = 24,
                            StateInitial = "NJ",
                            StateName = "New Jersey"
                        },
                        new
                        {
                            Id = 25,
                            StateInitial = "NM",
                            StateName = "New Mexico"
                        },
                        new
                        {
                            Id = 26,
                            StateInitial = "NY",
                            StateName = "New York"
                        },
                        new
                        {
                            Id = 27,
                            StateInitial = "NC",
                            StateName = "North Carolina"
                        },
                        new
                        {
                            Id = 28,
                            StateInitial = "ND",
                            StateName = "North Dakota"
                        },
                        new
                        {
                            Id = 29,
                            StateInitial = "OH",
                            StateName = "Ohio"
                        },
                        new
                        {
                            Id = 30,
                            StateInitial = "OK",
                            StateName = "Oklahoma"
                        },
                        new
                        {
                            Id = 31,
                            StateInitial = "OR",
                            StateName = "Oregon"
                        },
                        new
                        {
                            Id = 32,
                            StateInitial = "MD",
                            StateName = "Maryland"
                        },
                        new
                        {
                            Id = 33,
                            StateInitial = "MA",
                            StateName = "Massachusetts"
                        },
                        new
                        {
                            Id = 34,
                            StateInitial = "MI",
                            StateName = "Michigan"
                        },
                        new
                        {
                            Id = 35,
                            StateInitial = "MN",
                            StateName = "Minnesota"
                        },
                        new
                        {
                            Id = 36,
                            StateInitial = "MS",
                            StateName = "Mississippi"
                        },
                        new
                        {
                            Id = 37,
                            StateInitial = "MO",
                            StateName = "Missouri"
                        },
                        new
                        {
                            Id = 38,
                            StateInitial = "PA",
                            StateName = "Pennsylvania"
                        },
                        new
                        {
                            Id = 39,
                            StateInitial = "RI",
                            StateName = "Rhode Island"
                        },
                        new
                        {
                            Id = 40,
                            StateInitial = "SC",
                            StateName = "South Carolina"
                        },
                        new
                        {
                            Id = 41,
                            StateInitial = "SD",
                            StateName = "South Dakota"
                        },
                        new
                        {
                            Id = 42,
                            StateInitial = "TN",
                            StateName = "Tennessee"
                        },
                        new
                        {
                            Id = 43,
                            StateInitial = "TX",
                            StateName = "Texas"
                        },
                        new
                        {
                            Id = 44,
                            StateInitial = "UT",
                            StateName = "Utah"
                        },
                        new
                        {
                            Id = 45,
                            StateInitial = "VT",
                            StateName = "Vermont"
                        },
                        new
                        {
                            Id = 46,
                            StateInitial = "VA",
                            StateName = "Virginia"
                        },
                        new
                        {
                            Id = 47,
                            StateInitial = "WA",
                            StateName = "Washington"
                        },
                        new
                        {
                            Id = 48,
                            StateInitial = "WV",
                            StateName = "West Virginia"
                        },
                        new
                        {
                            Id = 49,
                            StateInitial = "WI",
                            StateName = "Wisconsin"
                        },
                        new
                        {
                            Id = 50,
                            StateInitial = "WY",
                            StateName = "Wyoming"
                        },
                        new
                        {
                            Id = 51,
                            StateInitial = "DC",
                            StateName = "District of Columbia"
                        });
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer")
                        .HasColumnName("address_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("total_price");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<List<int>>("PizzaId")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("pizza_id");

                    b.Property<int>("PizzaId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId1");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PizzaSizeId")
                        .HasColumnType("integer")
                        .HasColumnName("pizza_size_id");

                    b.PrimitiveCollection<List<int>>("PizzaToppingId")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("pizza_topping_id");

                    b.HasKey("Id");

                    b.HasIndex("PizzaSizeId");

                    b.ToTable("pizza");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.PizzaSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("size");

                    b.HasKey("Id");

                    b.ToTable("pizza_size");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size = "Small"
                        },
                        new
                        {
                            Id = 2,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Size = "Large"
                        },
                        new
                        {
                            Id = 4,
                            Size = "Extra Large"
                        });
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.PizzaTopping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PizzaId")
                        .HasColumnType("integer");

                    b.Property<string>("Topping")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pizza_topping");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("pizza_topping");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Topping = "Pepperoni"
                        },
                        new
                        {
                            Id = 2,
                            Topping = "Cheese"
                        },
                        new
                        {
                            Id = 3,
                            Topping = "Ham"
                        },
                        new
                        {
                            Id = 4,
                            Topping = "Banana Peppers"
                        },
                        new
                        {
                            Id = 5,
                            Topping = "Steak"
                        },
                        new
                        {
                            Id = 6,
                            Topping = "Beef"
                        },
                        new
                        {
                            Id = 7,
                            Topping = "Spinach"
                        },
                        new
                        {
                            Id = 8,
                            Topping = "Mushrooms"
                        },
                        new
                        {
                            Id = 9,
                            Topping = "Sausage"
                        },
                        new
                        {
                            Id = 10,
                            Topping = "Bacon"
                        },
                        new
                        {
                            Id = 11,
                            Topping = "Green Peppers"
                        },
                        new
                        {
                            Id = 12,
                            Topping = "Onions"
                        },
                        new
                        {
                            Id = 13,
                            Topping = "Chicken"
                        });
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Address", b =>
                {
                    b.HasOne("PizzaShop.Core.Entities.AddressState", "AddressState")
                        .WithMany()
                        .HasForeignKey("AddressStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressState");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Customer", b =>
                {
                    b.HasOne("PizzaShop.Core.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Order", b =>
                {
                    b.HasOne("PizzaShop.Core.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.OrderDetail", b =>
                {
                    b.HasOne("PizzaShop.Core.Entities.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Pizza", b =>
                {
                    b.HasOne("PizzaShop.Core.Entities.PizzaSize", "PizzaSize")
                        .WithMany()
                        .HasForeignKey("PizzaSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PizzaSize");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.PizzaTopping", b =>
                {
                    b.HasOne("PizzaShop.Core.Entities.Pizza", null)
                        .WithMany("PizzaToppings")
                        .HasForeignKey("PizzaId");
                });

            modelBuilder.Entity("PizzaShop.Core.Entities.Pizza", b =>
                {
                    b.Navigation("PizzaToppings");
                });
#pragma warning restore 612, 618
        }
    }
}
